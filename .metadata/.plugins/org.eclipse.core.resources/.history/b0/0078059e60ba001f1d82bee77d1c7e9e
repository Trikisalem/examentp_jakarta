<%@ page import="java.sql.*" errorPage="error.jsp" %>
<%
    // Récupération de la connexion existante
    Connection c = (Connection) application.getAttribute("connection");
    String roomId = request.getParameter("id");

    if (roomId != null && !roomId.trim().isEmpty()) {
        try {
            // Validation de l'ID pour s'assurer qu'il est un entier valide
            int id = Integer.parseInt(roomId);

            // Requête de suppression
            String deleteSql = "DELETE FROM RoomType WHERE id = ?";
            
            // Utilisation de try-with-resources pour garantir la fermeture du PreparedStatement
            try (PreparedStatement pst = c.prepareStatement(deleteSql)) {
                pst.setInt(1, id);
                
                // Exécution de la requête
                int rowsDeleted = pst.executeUpdate();
                
                // Vérification du nombre de lignes supprimées
                if (rowsDeleted > 0) {
                    response.sendRedirect("roomtypes.jsp"); // Redirection après succès
                } else {
                    // Alerte en cas d'échec de la suppression
                    out.println("<script>alert('Erreur : Type de chambre introuvable.');</script>");
                }
            }
        } catch (NumberFormatException e) {
            // Gestion de l'erreur si l'ID n'est pas un entier valide
            out.println("<script>alert('Erreur : Identifiant invalide.');</script>");
        } catch (SQLException e) {
            // Gestion des erreurs SQL
            out.println("<script>alert('Erreur de base de données : " + e.getMessage() + "');</script>");
        }
    } else {
        // Gestion du cas où l'ID est null ou vide
        out.println("<script>alert('Erreur : ID non fourni.');</script>");
    }
%>
