package com.dao;


import com.model.RoomType;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class RoomTypeDAO {

    private Connection connection;

    // Constructor to initialize the database connection
    public RoomTypeDAO(Connection connection) {
        this.connection = connection;
    }

    // Create a new room type
    public boolean createRoomType(RoomType roomType) {
        String sql = "INSERT INTO RoomType (label, capacity, price) VALUES (?, ?, ?)";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setString(1, roomType.getLabel());
            statement.setInt(2, roomType.getCapacity());
            statement.setInt(3, roomType.getPrice());
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Retrieve all room types
    public List<RoomType> getAllRoomTypes() {
        List<RoomType> roomTypes = new ArrayList<>();
        String sql = "SELECT * FROM RoomType";
        try (PreparedStatement statement = connection.prepareStatement(sql);
             ResultSet resultSet = statement.executeQuery()) {

            while (resultSet.next()) {
                RoomType roomType = new RoomType();
                roomType.setId(resultSet.getInt("id"));
                roomType.setLabel(resultSet.getString("label"));
                roomType.setCapacity(resultSet.getInt("capacity"));
                roomType.setPrice(resultSet.getInt("price"));
                roomTypes.add(roomType);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return roomTypes;
    }

    // Retrieve a room type by ID
    public RoomType getRoomTypeById(int id) {
        String sql = "SELECT * FROM RoomType WHERE id = ?";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setInt(1, id);
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    RoomType roomType = new RoomType();
                    roomType.setId(resultSet.getInt("id"));
                    roomType.setLabel(resultSet.getString("label"));
                    roomType.setCapacity(resultSet.getInt("capacity"));
                    roomType.setPrice(resultSet.getInt("price"));
                    return roomType;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    // Update a room type
    public boolean updateRoomType(RoomType roomType) {
        String sql = "UPDATE RoomType SET label = ?, capacity = ?, price = ? WHERE id = ?";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setString(1, roomType.getLabel());
            statement.setInt(2, roomType.getCapacity());
            statement.setInt(3, roomType.getPrice());
            statement.setInt(4, roomType.getId());
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }

    // Delete a room type by ID
    public boolean deleteRoomType(int id) {
        String sql = "DELETE FROM RoomType WHERE id = ?";
        try (PreparedStatement statement = connection.prepareStatement(sql)) {
            statement.setInt(1, id);
            return statement.executeUpdate() > 0;
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
}
