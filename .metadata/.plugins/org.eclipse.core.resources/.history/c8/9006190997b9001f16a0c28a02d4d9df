<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ page import="java.sql.*, java.util.*" %>

<%!
    // Database connection method
    private Connection getConnection() throws SQLException {
        try {
            // Load JDBC driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/hotel_management", 
                "root", 
                "triki"
            );
        } catch (ClassNotFoundException e) {
            throw new SQLException("MySQL JDBC Driver not found", e);
        }
    }

    // Method to map front-end room types to database labels
    private String mapRoomType(String frontendRoomType) {
        switch(frontendRoomType) {
            case "Chambre vue jardin":
                return "Garden View";
            case "Chambre vue de mer":
                return "Sea View";
            case "Bungalow":
                return "Suite";
            default:
                return null;
        }
    }
%>

<%
    // Get form parameters
    String checkIn = request.getParameter("check_in");
    String checkOut = request.getParameter("check_out");
    String roomType = request.getParameter("room_type");
    
    // Validation variables
    boolean validReservation = false;
    String errorMessage = "";
    String successMessage = "";

    if (checkIn != null && checkOut != null && roomType != null && !roomType.isEmpty()) {
        try {
            // Convert dates
            java.sql.Date checkInDate = java.sql.Date.valueOf(checkIn);
            java.sql.Date checkOutDate = java.sql.Date.valueOf(checkOut);

            // Map room type to database label
            String mappedRoomType = mapRoomType(roomType);

            if (mappedRoomType == null) {
                errorMessage = "Type de chambre invalide.";
            } else {
                // Validate dates
                if (checkOutDate.after(checkInDate)) {
                    try (Connection conn = getConnection()) {
                        // Find room type ID
                        String findRoomTypeQuery = "SELECT id FROM RoomType WHERE label = ?";
                        PreparedStatement roomTypeStmt = conn.prepareStatement(findRoomTypeQuery);
                        roomTypeStmt.setString(1, mappedRoomType);

                        ResultSet roomTypeRs = roomTypeStmt.executeQuery();

                        if (roomTypeRs.next()) {
                            int roomTypeId = roomTypeRs.getInt("id");

                            // Prepare reservation insert
                            String insertReservationQuery = "INSERT INTO Reservation " +
                                "(guest_first_name, guest_last_name, guest_email, guest_phone, " +
                                "check_in_date, check_out_date, room_type_id) VALUES " +
                                "(?, ?, ?, ?, ?, ?, ?)";

                            PreparedStatement pstmt = conn.prepareStatement(insertReservationQuery);
                            pstmt.setString(1, "Guest"); // Placeholder
                            pstmt.setString(2, "LastName"); // Placeholder
                            pstmt.setString(3, "guest@example.com"); // Placeholder
                            pstmt.setString(4, "1234567890"); // Placeholder
                            pstmt.setDate(5, checkInDate);
                            pstmt.setDate(6, checkOutDate);
                            pstmt.setInt(7, roomTypeId);

                            int rowsAffected = pstmt.executeUpdate();
                            if (rowsAffected > 0) {
                                validReservation = true;
                                successMessage = "Réservation effectuée avec succès !";
                            } else {
                                errorMessage = "Échec de la réservation.";
                            }
                        } else {
                            errorMessage = "Type de chambre non trouvé.";
                        }
                    }
                } else {
                    errorMessage = "La date de départ doit être après la date d'arrivée.";
                }
            }
        } catch (Exception e) {
            errorMessage = "Erreur de réservation : " + e.getMessage();
            e.printStackTrace();
        }
    }
%>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Réservation d'une chambre</title>
    <style>
        /* (Previous CSS remains the same) */
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Réservation d'une chambre</h2>
        
        <% if (!errorMessage.isEmpty()) { %>
            <div id="error-message" class="error-message"><%= errorMessage %></div>
        <% } %>
        
        <div id="success-message" class="confirmation-message" style="display: none;">
            <%= successMessage %>
        </div>

        <form action="reservation.jsp" method="post" id="reservation-form">
            <div class="input-container">
                <label for="room_type">Type de chambre :</label>
                <select id="room_type" name="room_type" required onchange="updatePrice()">
                    <option value="">Sélectionnez un type de chambre</option>
                    <option value="Chambre vue jardin">Chambre vue jardin</option>
                    <option value="Chambre vue de mer">Chambre vue de mer</option>
                    <option value="Bungalow">Bungalow</option>
                </select>
            </div>

            <div class="input-container">
                <label for="check_in">Date d'arrivée :</label>
                <input type="date" id="check_in" name="check_in" required onchange="updatePrice()">
            </div>

            <div class="input-container">
                <label for="check_out">Date de départ :</label>
                <input type="date" id="check_out" name="check_out" required onchange="updatePrice()">
            </div>

            <input type="hidden" id="price" name="price" value="100">
            <input type="hidden" id="total_price" name="total_price" value="0">

            <div id="reservation-details" class="reservation-details" style="display: none;">
                <h3>Détails de la réservation</h3>
                <p><strong>Type de chambre :</strong> <span id="room_display"></span></p>
                <p><strong>Date d'arrivée :</strong> <span id="check_in_display"></span></p>
                <p><strong>Date de départ :</strong> <span id="check_out_display"></span></p>
                <p><strong>Prix total :</strong> <span id="total_price_display"></span></p>
            </div>

            <button type="submit">Soumettre la réservation</button>
        </form>

        <div class="qr-code">
            <h3>Reconnaissance par QR Code</h3>
            <p>Scannez ce QR Code pour plus d'informations :</p>
            <img src="https://api.qrserver.com/v1/create-qr-code/?data=http://example.com&size=150x150" alt="QR Code">
        </div>
    </div>

    <script>
        // Fonction pour calculer et afficher le prix
        function updatePrice() {
            var roomType = document.getElementById("room_type").value;
            var priceField = document.getElementById("price");
            var totalPriceField = document.getElementById("total_price");
            
            var dailyPrice = 0;
            if (roomType === "Chambre vue jardin") {
                dailyPrice = 100;
            } else if (roomType === "Chambre vue de mer") {
                dailyPrice = 180;
            } else if (roomType === "Bungalow") {
                dailyPrice = 250;
            }
            
            priceField.value = dailyPrice;

            var checkInDate = document.getElementById("check_in").value;
            var checkOutDate = document.getElementById("check_out").value;

            // Calcul du nombre de jours
            if (checkInDate && checkOutDate) {
                var checkIn = new Date(checkInDate);
                var checkOut = new Date(checkOutDate);
                var daysDiff = (checkOut - checkIn) / (1000 * 60 * 60 * 24);
                if (daysDiff > 0) {
                    var totalPrice = dailyPrice * daysDiff;
                    totalPriceField.value = totalPrice;

                    // Affichage des détails de la réservation
                    document.getElementById("room_display").innerText = roomType;
                    document.getElementById("check_in_display").innerText = checkInDate;
                    document.getElementById("check_out_display").innerText = checkOutDate;
                    document.getElementById("total_price_display").innerText = totalPrice + " DT";

                    document.getElementById("reservation-details").style.display = "block";
                } else {
                    var errorMsg = document.getElementById("error-message");
                    errorMsg.innerText = "La date de départ doit être après la date d'arrivée.";
                    errorMsg.style.display = "block";
                }
            }
        }

        // Validation du formulaire avant soumission
        document.getElementById("reservation-form").onsubmit = function (e) {
            e.preventDefault();
            
            // Masquer les messages précédents
            var errorMessage = document.getElementById("error-message");
            var successMessage = document.getElementById("success-message");
            errorMessage.style.display = "none";
            successMessage.style.display = "none";

            var checkInDate = document.getElementById("check_in").value;
            var checkOutDate = document.getElementById("check_out").value;
            var roomType = document.getElementById("room_type").value;

            // Validation des champs
            if (!roomType) {
                errorMessage.innerText = "Veuillez sélectionner un type de chambre.";
                errorMessage.style.display = "block";
                return false;
            }

            if (checkInDate && checkOutDate) {
                var totalPrice = document.getElementById("total_price").value;
                
                if (totalPrice > 0) {
                    // Soumettre le formulaire via AJAX
                    var formData = new FormData(this);
                    
                    fetch('reservation.jsp', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.text())
                    .then(html => {
                        // Vérifier si la réservation a réussi 
                        // (vous pouvez ajuster cette logique selon votre implémentation)
                        if (html.includes("Réservation effectuée avec succès")) {
                            successMessage.innerText = "Réservation effectuée avec succès !";
                            successMessage.style.display = "block";
                            
                            // Réinitialiser le formulaire
                            document.getElementById("reservation-form").reset();
                            document.getElementById("reservation-details").style.display = "none";
                        } else {
                            // Afficher le message d'erreur du serveur
                            errorMessage.innerText = "Erreur lors de la réservation.";
                            errorMessage.style.display = "block";
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        errorMessage.innerText = "Une erreur est survenue.";
                        errorMessage.style.display = "block";
                    });
                } else {
                    errorMessage.innerText = "Veuillez remplir les dates correctement.";
                    errorMessage.style.display = "block";
                }
            }

            return false;
        }
    </script>
</body>
</html>