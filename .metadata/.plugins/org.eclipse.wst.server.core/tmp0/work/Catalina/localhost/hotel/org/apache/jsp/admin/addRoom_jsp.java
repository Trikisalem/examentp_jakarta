/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-18 02:41:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class addRoom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/user/Desktop/backend/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/hotel/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153377882000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1734448720554L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Room Management</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Global Styles */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            background-color: #e1f5fe; /* Bleu ciel pour le fond */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center; /* Center the form horizontally */\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            font-size: 2.5rem;\r\n");
      out.write("            color: #212121;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            font-weight: 600;\r\n");
      out.write("            letter-spacing: 1px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Form Container Styling */\r\n");
      out.write("        .form-container {\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            max-width: 480px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            transition: box-shadow 0.3s ease, transform 0.3s ease;\r\n");
      out.write("            border: 1px solid #e0e0e0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container:hover {\r\n");
      out.write("            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\r\n");
      out.write("            transform: scale(1.03);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container h3 {\r\n");
      out.write("            font-size: 1.6rem;\r\n");
      out.write("            color: #4f4f4f;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Input Fields */\r\n");
      out.write("        .form-container input,\r\n");
      out.write("        .form-container select,\r\n");
      out.write("        .form-container textarea {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 14px;\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("            background-color: #f9fafb;\r\n");
      out.write("            border: 1px solid #e0e0e0;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            color: #212121;\r\n");
      out.write("            transition: border 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container input:focus,\r\n");
      out.write("        .form-container textarea:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #4CAF50;\r\n");
      out.write("            box-shadow: 0 0 8px rgba(76, 175, 80, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Button Styles */\r\n");
      out.write("        .form-container button {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 14px;\r\n");
      out.write("            background-color: #4fc3f7; /* Bleu ciel pour le bouton */\r\n");
      out.write("            color: #ffffff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            transition: background-color 0.3s ease, transform 0.3s ease;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container button:hover {\r\n");
      out.write("            background-color: #29b6f6; /* Un bleu un peu plus foncé pour l'effet hover */\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-container button:active {\r\n");
      out.write("            background-color: #0288d1; /* Un bleu encore plus foncé quand le bouton est actif */\r\n");
      out.write("            transform: translateY(2px);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Responsive Design */\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .form-container {\r\n");
      out.write("                padding: 25px;\r\n");
      out.write("                margin: 20px;\r\n");
      out.write("                width: 90%;\r\n");
      out.write("                margin-left: 0;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            h1 {\r\n");
      out.write("                font-size: 2rem;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            .form-container h3 {\r\n");
      out.write("                font-size: 1.4rem;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Formulaire pour ajouter une chambre -->\r\n");
      out.write("<div class=\"form-container\">\r\n");
      out.write("    <form method=\"post\" action=\"addRoom.jsp\">\r\n");
      out.write("        <h3>Add a New Room</h3>\r\n");
      out.write("        <input type=\"number\" name=\"id\" placeholder=\"Room ID\" required>\r\n");
      out.write("        <input type=\"text\" name=\"label\" placeholder=\"Room Label\" required>\r\n");
      out.write("        <input type=\"number\" name=\"capacity\" placeholder=\"Room Capacity\" required>\r\n");
      out.write("        <input type=\"number\" name=\"price\" placeholder=\"Room Price\" required>\r\n");
      out.write("        \r\n");
      out.write("        <button type=\"submit\">Add Room</button>\r\n");
      out.write("    </form>\r\n");
      out.write("    <button class=\"back-button\" onclick=\"window.location.href='hotel.jsp';\">Retour</button>\r\n");
      out.write("    \r\n");
      out.write("</div>\r\n");
      out.write("\r\n");

    // Variables de connexion à la base de données
    String dbUrl = "jdbc:mysql://localhost:3306/hotel_management";
    String dbUser = "root";
    String dbPassword = "triki";
    Connection conn1 = null;
    PreparedStatement stmt1 = null;

    if ("POST".equalsIgnoreCase(request.getMethod())) {
        String idStr = request.getParameter("id");
        String label = request.getParameter("label");
        String capacityStr = request.getParameter("capacity");
        String priceStr = request.getParameter("price");

        // Vérification des paramètres
        if (idStr == null || idStr.trim().isEmpty()) {
            out.println("<p>Error: Room ID is required.</p>");
            return;
        }

        int id = Integer.parseInt(idStr);
        int capacity = Integer.parseInt(capacityStr);
        int price = Integer.parseInt(priceStr);

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn1 = DriverManager.getConnection(dbUrl, dbUser, dbPassword); // Connexion à la base de données

            String insertQuery = "INSERT INTO roomtype (id, label, capacity, price) VALUES (?, ?, ?, ?)";
            stmt1 = conn1.prepareStatement(insertQuery);
            stmt1.setInt(1, id);  // Utilisation de stmt1 pour l'insertion
            stmt1.setString(2, label);
            stmt1.setInt(3, capacity);
            stmt1.setInt(4, price);

            int result = stmt1.executeUpdate();
            if (result > 0) {
                response.sendRedirect("profit.jsp");  // Redirection vers la page profit.jsp après ajout
            } else {
                out.println("<p>Error adding room.</p>");
            }

        } catch (Exception e) {
            e.printStackTrace();
            out.println("<p>Error: " + e.getMessage() + "</p>");
        } finally {
            if (stmt1 != null) try { stmt1.close(); } catch (SQLException e) {}
            if (conn1 != null) try { conn1.close(); } catch (SQLException e) {}
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
